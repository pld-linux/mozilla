--- mozilla/xpcom/glue/nsCOMPtr.h.orig	2003-07-22 20:30:50.000000000 +0200
+++ mozilla/xpcom/glue/nsCOMPtr.h	2003-11-20 16:59:46.000000000 +0100
@@ -107,6 +107,17 @@
   #undef NSCAP_FEATURE_TEST_DONTQUERY_CASES
 #endif
 
+#if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)                    
+  // Our use of nsCOMPtr_base::mRawPtr violates the C++ standard's aliasing   
+  // rules. Mark it with the may_alias attribute so that gcc 3.3 and higher   
+  // don't reorder instructions based on aliasing assumptions for             
+  // this variable.  Fortunately, gcc versions < 3.3 do not do any            
+  // optimizations that break nsCOMPtr.                                       
+  #define NS_MAY_ALIAS_PTR(t)    t*  __attribute__((__may_alias__))           
+#else                                                                         
+  #define NS_MAY_ALIAS_PTR(t)    t*                                           
+#endif                                                                        
+                                                                                
 #if defined(NSCAP_DISABLE_DEBUG_PTR_TYPES) || !defined(NS_DEBUG)
   #undef NSCAP_FEATURE_DEBUG_PTR_TYPES
 #endif
@@ -407,7 +418,7 @@
       NS_COM void**  begin_assignment();
 
     protected:
-      nsISupports* mRawPtr;
+      NS_MAY_ALIAS_PTR(nsISupports) mRawPtr;
 
       void
       assign_assuming_AddRef( nsISupports* newPtr )
